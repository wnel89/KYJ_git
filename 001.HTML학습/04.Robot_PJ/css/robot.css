@charset "utf-8";
/* 로봇 PJ CSS - robot.css */

/* 웹폰트(CDN) */
@import url('https://fonts.googleapis.com/css2?family=Black+Ops+One&family=Orbitron&display=swap');
/* 
font-family: 'Black Ops One', cursive;
font-family: 'Orbitron', sans-serif;
*/

html {
    scroll-behavior: smooth;
    /* 내부 아이디 요소 위치로 이동시
    스크롤 애니메이션을 부드럽게 처리함!
    최상위 요소인 html에 셋팅함! */
}

html,
body {
    margin: 0;
    padding: 0;
    overflow-x: hidden;
    /* 가로스크롤 숨기기 */
}

body {
    background: url(../images/bg.jpg) no-repeat fixed top/cover;
}

/* 공사중 아웃라인 */
/* body *{
    outline: 2px dashed lime;
} */
/************************************************** 
    [ 요소 정중앙 정렬법 ]

    1. 50%로 밀고 자기크기의 절반만큼 빼기
    ((사용예)) calc(50% - 특정px)
    - 주의: 마이너스 기호 앞뒤에 띄어쓰기 필수!
    ->>> calc() 메서드 사용
    - 사칙연산이 모두 가능하며
    여기서는 유동적인 % 단위에서 특정 px을
    빼는데 사용함!

    2. 50%로 밀고 자기자신크기의 절반 반대방향이동
    ->>> transform: translate(-50%,-50%) 사용!

    (참고)
    https://www.w3schools.com/css/css_math_functions.asp

**************************************************/

/* 로봇페이지 로고 */
h1#logo {
    position: fixed;
    top: calc(50% - 100px);
    left: calc(50% - 100px);
    /* fixed의 부모는 항상 보이는화면! */
    z-index: 1;
    /* 위치 위 */

    /* 크기확대 2배 */
    transform: scale(2);

    width: 200px;
    height: 200px;
    border: 2px solid #ccc;
    border-radius: 50%;
    margin: 0;

    /* 글자정중앙 */
    text-align: center;
    /* 가로중앙 */
    line-height: 200px;
    /* 세로중앙 */

    color: #00ffb3;
    font-family: 'Orbitron', sans-serif;
    font-size: 45px;
    text-shadow: 2px 2px 2px #000;
    /* 글자그림자: x y blur 색 */
    box-shadow: 0 0 20px 5px pink,
        inset 0 0 20px 5px #000;
    /* 박스그림자: x y blur spread 색 */

    /* 배경 */
    background: pink url(../images/robot_03.png) no-repeat;
    background-position: center 10px;
    background-size: 160px;

    /* 애니메이션 : 이시이지반방마 */
    animation: logoAni 2s ease-in-out 2s forwards,
    logoAni2 1s ease-in-out 4s infinite alternate;
}

/* 로고 애니 키프레임 */
@keyframes logoAni {
    /* 시작값 - 초기값과 같으면 생략 */
    /* from {
        top: calc(50% - 100px);
        left: calc(50% - 100px);
        transform: scale(2);
    } */
    80%{
        top: 50px;
        left: 50px;
        transform: scale(1) rotate(0deg);
    }
    /* 80%~100% 구간에 rotate 각도만 20도로 변경 */
    100%{
        top: 50px;
        left: 50px;
        transform: scale(1) rotate(20deg);
    }
}
/* 로고 흔들기 키프레임 */
@keyframes logoAni2 {
    0%{
        transform: rotate(20deg);
    }
    100%{
        transform: rotate(-20deg);
    }
}
/* logoAni2 키프레임 */


/**************************************************** 
    [ CSS로 애니메이션 하기 ]

    - 시간에 따라 CSS설정이 변경되어 애니메이션 하도록
    키프레임을 설정하고 이것을 호출함으로 의도된 연출을
    구현하는 것이 CSS 애니메이션이다!

    [ 애니메이션 키프레임 만들기 ]
    - 키프레임이란? 애니메이션 장면을 넣는 코드

    1. 두장면 키프레임

    @keyframes 키프레임이름{
        from{시작CSS설정}
        to{끝나는CSS설정}
    }

    또는

    @keyframes 키프레임이름{
        0%{시작CSS설정}
        100%{끝나는CSS설정}
    }

    -> 만약 from설정이 초기설정과 같다면 from 생략가능!

    2. 여러장명 키프레임
    @keyframes 키프레임이름{
        0%{시작CSS설정}
        10%{시작CSS설정}
        20%{시작CSS설정}
        ...
        80%{시작CSS설정}
        90%{시작CSS설정}
        100%{끝나는CSS설정}
    }

    (1) 장면에 대한 시간 계산은 어떻게 하나?
    -> 전체시간 * 설정된%/100

    (2) 전체시간은 언제 셋팅하나? -> 호출시에 셋팅!

    [ 설정된 키프레임 호출하는 방법 ]

    animation: 이시이지반방마
    (이름 시간 이징 지연 반복 방향 마지막상태)

    1.이름 (animation-name) : 키프레임 이름
    
    2.시간 (animation-duration) : 애니메이션 동작시간
        -> 초단위(s)

    3.이징 (animation-timing-function) : easing 가속도

    4.지연 (animation-delay) : 애니메이션 시작 지연시간 (s)

    5.반복 (animation-iteration-count) : 애니메이션 반복
        - 기본값 1, 숫자를 쓰면 숫자만큼 반복함
        - 영원히 (infinite)

    6.방향 (animation-direction) : 시작 -> 끝
        - 반복시 시작과 반대경로로 애니매이션을 만들어준다
        - alternate : 시작- > 끝, 끝 -> 시작
        - 유의사항: 반복횟수가 2회 이상이어야 함

    7.마지막 상태 (animation-fill-mode):
        - 애니메이션이 끝났을 때 처음으로 돌아가는게 기본인데
        -> fowards (앞쪽에, 애니 끝 장면으로 마무리)
        - infinite일때는 해당사항 없음
    
    지연 반복 방향 마지막상태

****************************************************/

/* 내용보기 링크 타이틀 */
.link {
    position: absolute;
    top: 100px;
    right: 50px;
    /* 부모는? 보이는화면 */
}

/* 링크 a요소 */
.link a {
    font-family: 'Black Ops One', cursive;
    font-size: 50px;
    font-weight: normal;
    color: lawngreen;
    text-decoration: none;
    text-shadow: 2px 2px 2px #000;
}

/* 마우스 오버시 */
.link a:hover {
    color: orangered;
    text-decoration: overline;
}

/* 위로이동버튼 */
.btnTop {
    position: fixed;
    bottom: 50px;
    right: 50px;
    /* 보이는 화면 기준 */
    width: 100px;
    height: 100px;
    text-align: center;
    line-height: 100px;
    border-radius: 50%;
    color: blue;
    font-family: 'Black Ops One', cursive;
    font-size: 30px;
    text-decoration: none;
    background-color: #ccc;
}

/* 버튼오버시 */
.btnTop:hover {
    background-color: #ff0;
    color: red;
}

/* 로봇머리 */
#head {
    position: relative;
    /* 부모자격! */
    left: 100%;
    /* 머리 오른쪽 바깥에 나가있음! */
    width: 250px;
    height: 250px;
    background: url(../images/metal01.jpg) no-repeat center/cover;
    margin: 0 auto;
    margin-top: 100px;
    border-radius: 50px 50px 0 0;
}

/* 눈1 */
#eye1 {
    position: absolute;
    top: 50px;
    left: 50px;
    /* 부모는? #head */

    width: 50px;
    height: 50px;
    background: url(../images/e1.jpg) no-repeat 0/100% 100%;
}

/* 눈2 */
#eye2 {
    position: absolute;
    top: 50px;
    right: 50px;
    /* 부모는? #head */

    width: 50px;
    height: 50px;
    background: url(../images/e2.jpg) no-repeat 0/100% 100%;
}

/* 코 */
#nose {
    position: absolute;
    top: 103px;
    right: 104px;
    /* 부모는? #head */

    width: 43px;
    height: 65px;
    background: url(../images/nose.jpg) no-repeat 0/110% 100%;
}

/* 입 */
#mouth {
    position: absolute;
    bottom: 29px;
    left: 77px;
    /* 부모는? #head */

    width: 96px;
    height: 42px;
    background: url(../images/mouth.png) no-repeat 0/100% 100%;
}

/* 귀1 */
#ear1 {
    position: absolute;
    top: 69px;
    left: -48px;
    /* 부모는? #head */

    width: 48px;
    height: 94px;
    border-radius: 15px 0 0 15px;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
}

/* 귀2 */
#ear2 {
    position: absolute;
    top: 69px;
    right: -48px;
    /* 부모는? #head */

    width: 48px;
    height: 94px;
    border-radius: 0 15px 15px 0;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
}

/* 로봇몸 */
#body {
    position: relative;
    /* 부모자격! */
    left: -100%;
    /* 몸 왼쪽 바깥에 나가있음 */
    width: 250px;
    height: 300px;
    margin: 0 auto;
    /* 마영오! */
    margin-top: 50px;
    margin-bottom: 300px;
    /* 아래쪽 다리만큼 여유공간주기 */

    background: url(../images/metal01.jpg) no-repeat center/cover;
}

/* 목 */
#neck {
    position: absolute;
    top: -50px;
    left: 91px;
    /* 부모는? #body */

    width: 69px;
    height: 50px;
    background: url(../images/metal02.jpg) no-repeat 0/100% 100%;
}

/* 팔다리 공통 */
.part {
    position: absolute;
    width: 50px;
    height: 250px;
    background: url(../images/metal02.jpg) repeat-y 0/100%;
}

/* 왼팔 */
#arm1 {
    top: 0px;
    left: -53px;
}

/* 오른팔 */
#arm2 {
    top: 0px;
    right: -53px;
}

/* 왼다리 */
#leg1 {
    top: 100%;
    left: 0x;
}

/* 오른다리 */
#leg2 {
    top: 100%;
    right: 0;
}

/* TV */
#tv {
    position: absolute;
    /* 부모자격 - #screen */
    top: 49px;
    left: 24px;
    /* 부모는? #body */

    width: 200px;
    height: 150px;
    background: url(../images/tv.jpg) no-repeat 0/100% 100%;
}

/* 스크린 */
#screen {
    position: absolute;
    /* 부모자격 - #screen iframe */
    top: 18px;
    left: 12px;
    /* 부모는? #tv */

    width: 137px;
    height: 102px;
    background-color: #000;
    border-radius: 20px;

    overflow: hidden;
    /* 넘치는 자식요소 숨기기! */
}

/* 유튜브 아이프레임 */
#screen iframe {
    position: absolute;
    top: -17px;
    left: -51px;
    /* 부모는? #screen */

    width: 180%;
    height: 138%;

    border: none;
    /* 아이프레임 기본보더 없앰! */
}

/* 로봇 설명박스 */
#dcbx {
    width: 800px;
    margin: 0 auto;
    /* 마영오! */
    margin-bottom: 200px;
    /* 하단공간 */
    border: 3px solid #fff;
    border-radius: 20px;
    padding: 15px 30px;
    /* 패딩: 위아래 양쪽 */
    background-color: rgba(0, 0, 0, 0.5);

    color: #fff;
    text-shadow: 1px 1px 1px #000;
    /* 글자그림자: x y 블러 색 */
    box-shadow:
        inset 0 0 20px blue,
        inset 0 0 50px 20px cyan;
    /* 박스그림자: (내부) x y 블러 (크기) 색
    -> 그림자색을 형광계열로 주면 glow효과를 줄 수 있다!
    -> 글자그림자와 달리 그림자 크기(spread)를 줄 수 있다!
    이것으로 더 강한 효과를 줄 수 있음(0은 기본값)
    -> 글자그림자나 박스그림자 모두 여러개를 콤마로 셋팅가능! */
}

/* 로봇설명 제목 */
#dcbx h2 {
    position: sticky;
    top: 10px;
    /* 스크롤시 top값 설정으로
    위치를 고정할 수 있다! */
    font-size: 35px;
    text-align: center;
    color: lime;
    background-color: rgba(255, 255, 255, 0.4);
    border-radius: 20px;
}

/* 로봇 출처 */
#dcbx small {
    display: block;
    text-align: center;
    color: #ff0;

}

/* 설명문단 */
#dcbx p {
    font-size: 15px;
    /* 기본글자는 16px */
    line-height: 1.8;
    /* 줄간격: 배수/단위 등 */
    letter-spacing: 1px;
    /* 자간 */
    word-spacing: 2px;
    /* 단어간격 */

    /* 가독성을 위한 다단설정 */
    /* 다단표시(다중열속성) */

    column-count: 3;
    /* 다중열개수 */
    column-rule: 5px dotted #68cfff;
    /* 다중열구분선
    -> 값은 보더와 같다(두께 종류 색상) */
    column-gap: 55px;
    /* 다중열 사이간격
    -> 구분선 오른쪽 간격조정 */

    /* 문단정렬 */
    text-align: justify;
    /* 양쪽정렬 - 양쪽 끝라인 맞춤! */
    word-break: break-all;
    /* 단어깨기! - 단어의 한글자씩 깨줌!
    영문자는 단어 단위로 기본적으로 
    붙어다님! 이것을 깨줘야 양쪽정렬이
    보기 좋아짐(한글은 안깨도 괜찮음!) */
    text-indent: 20px;
    /* 첫줄 들여쓰기(마이너스값은 내어쓰기) */
}

/* 가상요소로 첫글자 디자인변경하기 */
#dcbx p::first-letter {
    font-size: 30px;
    font-weight: bold;
    color: lightsalmon;
}